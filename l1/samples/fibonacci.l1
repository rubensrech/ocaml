let rec fib : (int -> int) =
    (fn x: int =>
        if (x <= 2)
        then 1
        else (fib (x-1)) + (fib (x-2)))
    in
        fib 40






 let rec max (l:list int)  : int =
    match l with
       [] -> 0
       (h::t) -> if  h < 0 
                   then (max t)
                   else h


                 let m = max t in
                    if h < m then m else h   


